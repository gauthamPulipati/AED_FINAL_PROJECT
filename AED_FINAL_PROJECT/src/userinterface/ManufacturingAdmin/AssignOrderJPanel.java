/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ManufacturingAdmin;

import Business.ManifacturingWarehouse.ManufacturingWarehouse;
import Business.Order.Order;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ShippingOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gauthamrajsimhapulipati
 */
public class AssignOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AssignOrderJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private ManufacturingWarehouse manufacturingWarehouse;
    
    public AssignOrderJPanel(JPanel userProcessContainer, UserAccount account, ManufacturingWarehouse manufacturingWarehouse) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.manufacturingWarehouse = manufacturingWarehouse;
        
        populateOrderTable();
        populateDeliveryJComboBox();
    }
    
    
    
    private void populateDeliveryJComboBox(){
        shippingManJComboBox.removeAllItems();
        
        String del = "Shipping Man";
        
        for(UserAccount ua:manufacturingWarehouse.getUserAccountDirectory().getUserAccountList()){
            if(ua.getRole().toString().equals(del)){
                shippingManJComboBox.addItem(ua);
            }
        }
    }
    
    
    private void populateOrderTable(){
        DefaultTableModel model = (DefaultTableModel)tblOrder.getModel();
        model.setRowCount(0);
        
        ArrayList<WorkRequest> wr = manufacturingWarehouse.getWorkQueue().getWorkRequestList();
        for(int i=wr.size()-1; i>=0;i--){
            
            ShippingOrderWorkRequest lt = (ShippingOrderWorkRequest)wr.get(i);
            Order order = lt.getOrders();
                Object[] row = new Object[5];
                row[0] = lt;
                row[1] = order.getId();
                row[4] = lt.getStatus();
                row[3] = order.getPrice();
                row[2] = order.getQuantity();
                model.addRow(row);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        AssignShipping = new javax.swing.JButton();
        shippingManJComboBox = new javax.swing.JComboBox();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();

        setBackground(new java.awt.Color(237, 246, 249));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrder.setBackground(new java.awt.Color(131, 197, 190));
        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Order ID", "Quantity", "Price", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 178, 536, 175));

        jLabel1.setText("Select Shipping Man :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 371, -1, -1));

        AssignShipping.setBackground(new java.awt.Color(131, 197, 190));
        AssignShipping.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        AssignShipping.setText("Assign Shipping Man");
        AssignShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignShippingActionPerformed(evt);
            }
        });
        add(AssignShipping, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 430, -1, -1));

        shippingManJComboBox.setBackground(new java.awt.Color(153, 191, 170));
        shippingManJComboBox.setForeground(new java.awt.Color(92, 61, 70));
        shippingManJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        shippingManJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shippingManJComboBoxActionPerformed(evt);
            }
        });
        add(shippingManJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 365, 190, 30));

        btnAccept.setBackground(new java.awt.Color(153, 255, 153));
        btnAccept.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        add(btnAccept, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 228, -1, -1));

        btnReject.setBackground(new java.awt.Color(255, 153, 153));
        btnReject.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(703, 298, -1, -1));

        jPanel1.setBackground(new java.awt.Color(131, 197, 190));

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Devanagari MT", 1, 36)); // NOI18N
        jLabel2.setText("Assign Order");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnBack)
                .addGap(197, 197, 197)
                .addComponent(jLabel2)
                .addContainerGap(405, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 903, -1));

        btnRefresh.setBackground(new java.awt.Color(131, 197, 190));
        btnRefresh.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void shippingManJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shippingManJComboBoxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_shippingManJComboBoxActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManufacturingAdminJPanel hentadjp = (ManufacturingAdminJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to accept");
            return;
        }
        
        WorkRequest request = (WorkRequest) tblOrder.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Order placed")){
            request.setStatus("Accepted");
        }
        else{
            JOptionPane.showMessageDialog(this, "Request has been previously accepted/ rejected");
        }
        populateOrderTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to reject the order");
            return;
        }
        
        WorkRequest request = (WorkRequest) tblOrder.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Sent")){
            request.setStatus("Rejected");
        }
        else{
            JOptionPane.showMessageDialog(this, "Request has been previously accepted/ rejected");
        }
        populateOrderTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void AssignShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignShippingActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow < 0){
            return;
        }
        
        ShippingOrderWorkRequest request = (ShippingOrderWorkRequest) tblOrder.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Accepted")){
            UserAccount ua1 = (UserAccount)shippingManJComboBox.getSelectedItem();
            request.setReceiver(ua1);
            request.setStatus("On the way");
            populateOrderTable();
        }
        else{
            if(request.getStatus().equals("Sent")){
                JOptionPane.showMessageDialog(this, "Please accept this request to assign");
            }
            else{
                JOptionPane.showMessageDialog(this, "Request has been previously assigned/ rejected");
            }
        }
    }//GEN-LAST:event_AssignShippingActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateOrderTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignShipping;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox shippingManJComboBox;
    private javax.swing.JTable tblOrder;
    // End of variables declaration//GEN-END:variables
}
