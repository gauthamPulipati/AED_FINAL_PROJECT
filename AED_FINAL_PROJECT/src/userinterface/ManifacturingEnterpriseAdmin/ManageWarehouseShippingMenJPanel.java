/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ManifacturingEnterpriseAdmin;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.ManifacturingWarehouse.ManufacturingWarehouse;
import Business.Role.ShippingManRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrigesh
 */
public class ManageWarehouseShippingMenJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;

    /**
     * Creates new form ManageWarehouseShippingMen
     */
    public ManageWarehouseShippingMenJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        populateJComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblShippingManWarehouse = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtShipName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtShipUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtShipPassword = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        warehouseJComboBox = new javax.swing.JComboBox();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(131, 197, 190));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblShippingManWarehouse.setBackground(new java.awt.Color(131, 197, 190));
        tblShippingManWarehouse.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 204), 3, true));
        tblShippingManWarehouse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Shipping Man Name"
            }
        ));
        jScrollPane1.setViewportView(tblShippingManWarehouse);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, 157));

        jLabel1.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        jLabel1.setText("Warehouse Name :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, -1, 20));

        jLabel2.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        jLabel2.setText("Shipping Man Name : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, -1, -1));
        add(txtShipName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 161, -1));

        jLabel3.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        jLabel3.setText("Username :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 430, -1, -1));
        add(txtShipUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 430, 161, -1));

        jLabel4.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        jLabel4.setText("Password :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, -1, -1));
        add(txtShipPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 161, -1));

        btnSubmit.setBackground(new java.awt.Color(0, 109, 119));
        btnSubmit.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 520, 100, 40));

        warehouseJComboBox.setBackground(new java.awt.Color(180, 223, 229));
        warehouseJComboBox.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        warehouseJComboBox.setForeground(new java.awt.Color(48, 60, 108));
        warehouseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        warehouseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warehouseJComboBoxActionPerformed(evt);
            }
        });
        add(warehouseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 340, 161, -1));

        btnModify.setBackground(new java.awt.Color(0, 109, 119));
        btnModify.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });
        add(btnModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 120, 40));

        btnDelete.setBackground(new java.awt.Color(0, 109, 119));
        btnDelete.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 249, 120, 40));

        jPanel1.setBackground(new java.awt.Color(0, 109, 119));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 204), 5, true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Devanagari MT", 1, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Shipping Men Details");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 520, -1));

        jButton1.setFont(new java.awt.Font("Devanagari MT", 1, 14)); // NOI18N
        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 870, 110));
    }// </editor-fold>//GEN-END:initComponents

    private void warehouseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warehouseJComboBoxActionPerformed
        // TODO add your handling code here:
        ManufacturingWarehouse warehouse = (ManufacturingWarehouse) warehouseJComboBox.getSelectedItem();
        if (warehouse != null) {
            populateTable(warehouse);
        }
    }//GEN-LAST:event_warehouseJComboBoxActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        ManufacturingWarehouse warehouse = (ManufacturingWarehouse) warehouseJComboBox.getSelectedItem();

        String username = txtShipUsername.getText();
        String password = txtShipPassword.getText();
        String name = txtShipName.getText();
        
        if(username.isEmpty() || name.isEmpty() || password.isEmpty() ){
        
            JOptionPane.showMessageDialog(this, "All Fields are Mandatory");
            return;
        }
        boolean isValid ; 
        
        isValid = name.matches("^[a-zA-Z]+$");
        if(!isValid) {
            JOptionPane.showMessageDialog(null, "Name must contains only alphabets");
            txtShipName.setText("");
            return;
        }
        if(warehouse.getUserAccountDirectory().checkIfUsernameIsUnique(username) == false){
            JOptionPane.showMessageDialog(this, "User name taken, try another one");
            txtShipUsername.setText("");
            txtShipPassword.setText("");
            return;
        }
        
        isValid = username.matches("^[a-zA-Z0-9]+$");
        
        if(!isValid) {
            JOptionPane.showMessageDialog(null, "Username must be Alphanumeric");
            txtShipUsername.setText("");
            return;
        }
        
        isValid = password.matches("^[a-zA-Z0-9]+$$");
        
        if(!isValid) {
            JOptionPane.showMessageDialog(null, "Password must be Alphanumeric");
            txtShipPassword.setText("");
            return;
        }

        if(password.length()<6){
            JOptionPane.showMessageDialog(this, "Password too weak, choose a password with a minimum length of 6");
            txtShipPassword.setText("");
            return;
        }

        Employee employee = warehouse.getEmployeeDirectory().createEmployee(name);
        UserAccount ua = warehouse.getUserAccountDirectory().createUserAccount(username, password, employee, new ShippingManRole());

        populateTable(warehouse);
        
        txtShipUsername.setText("");
        txtShipPassword.setText("");
        txtShipName.setText("");
        btnDelete.setEnabled(true);
        btnModify.setEnabled(true);
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManifacturingEnterpriseAdminJPanel manetn = (ManifacturingEnterpriseAdminJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        ManufacturingWarehouse warehouse = (ManufacturingWarehouse) warehouseJComboBox.getSelectedItem();
        int selectedRowIndex = tblShippingManWarehouse.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to Modify");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblShippingManWarehouse.getModel();
        UserAccount us = (UserAccount) model.getValueAt(selectedRowIndex, 0);
        txtShipUsername.setText(us.getUsername());
        txtShipPassword.setText(us.getPassword());
        txtShipName.setText(us.getEmployee().getName());
        warehouse.getUserAccountDirectory().removeUser(us);
        btnDelete.setEnabled(false);
        btnModify.setEnabled(false);
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        ManufacturingWarehouse warehouse = (ManufacturingWarehouse) warehouseJComboBox.getSelectedItem();
        
        int selectedRow = tblShippingManWarehouse.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblShippingManWarehouse.getModel();
        
        UserAccount us = (UserAccount) model.getValueAt(selectedRow, 0);
        
        warehouse.getEmployeeDirectory().deleteEmployee(us.getEmployee());
        warehouse.getUserAccountDirectory().removeUser(us);
        
        populateTable(warehouse);
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblShippingManWarehouse;
    private javax.swing.JTextField txtShipName;
    private javax.swing.JTextField txtShipPassword;
    private javax.swing.JTextField txtShipUsername;
    private javax.swing.JComboBox warehouseJComboBox;
    // End of variables declaration//GEN-END:variables

    private void populateJComboBox() {
        warehouseJComboBox.removeAllItems();
        int i = 0;
        for (ManufacturingWarehouse wrhs : enterprise.getManufacturingWarehouseDirectory().getWarehousedirectory()) {
            if (i == 0) {
                populateTable(wrhs);
                i++;
                System.out.println(wrhs.getWareHouseName());
            }
            warehouseJComboBox.addItem(wrhs);
        }
    }

    private void populateTable(ManufacturingWarehouse wrhs) {
        DefaultTableModel model = (DefaultTableModel) tblShippingManWarehouse.getModel();
        model.setRowCount(0);

        String dm = "Shipping Man";

        for (UserAccount us : wrhs.getUserAccountDirectory().getUserAccountList()) {
            if (us.getRole().toString().equals(dm)) {
                Object[] row = new Object[2];
                row[0] = us;
                row[1] = us.getEmployee().getName();
                model.addRow(row);
            }
        }
    }
}
