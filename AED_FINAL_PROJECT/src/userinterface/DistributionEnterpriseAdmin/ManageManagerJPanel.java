/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DistributionEnterpriseAdmin;

import Business.Distribution.Distribution;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.ManifacturingWarehouse.ManufacturingWarehouse;
import Business.Role.ManagerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.ManifacturingEnterpriseAdmin.ManifacturingEnterpriseAdminJPanel;

/**
 *
 * @author gauthamrajsimhapulipati
 */
public class ManageManagerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageManagerJPanel
     */
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    public ManageManagerJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        populateJComboBox();
    }
    
    private void populateJComboBox() {
        distributionJComboBox.removeAllItems();
        int i=0;
        for(Distribution distribution :enterprise.getDistributionDirectory().getDistributions()){
            if(i==0){
                populateTable(distribution);
                i++;
                System.out.println(distribution.getDistributionName());
            }
            distributionJComboBox.addItem(distribution);
        }
    }
    
    private void populateTable(Distribution distribution){
        DefaultTableModel model = (DefaultTableModel)tblManager.getModel();
        model.setRowCount(0);
        
        String dm = "Manager";
        
        for(UserAccount us: distribution.getUserAccountDirectory().getUserAccountList()){
            if(us.getRole().toString().equals(dm)){
                Object[] row = new Object[2];
                row[0] = us;
                row[1] = us.getEmployee().getName();
                model.addRow(row);
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        distributionJComboBox = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtPassword = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManager = new javax.swing.JTable();
        txtManagerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jLabel1.setText("Distribution Name");

        distributionJComboBox.setBackground(new java.awt.Color(180, 223, 229));
        distributionJComboBox.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        distributionJComboBox.setForeground(new java.awt.Color(48, 60, 108));
        distributionJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        distributionJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distributionJComboBoxActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel4.setText("Password : ");

        jLabel3.setText("Username");

        tblManager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Manager Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblManager);

        jLabel2.setText("Manager Name :");

        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModify)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtManagerName)
                    .addComponent(txtUsername)
                    .addComponent(txtPassword)
                    .addComponent(distributionJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(153, 153, 153))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnModify))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(distributionJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtManagerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSubmit))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void distributionJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distributionJComboBoxActionPerformed
        // TODO add your handling code here:
        Distribution distribution = (Distribution) distributionJComboBox.getSelectedItem();
        if(distribution!=null){
            populateTable(distribution);
        }
    }//GEN-LAST:event_distributionJComboBoxActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        Distribution distribution = (Distribution) distributionJComboBox.getSelectedItem();

        String username = txtUsername.getText();
        String password = txtPassword.getText();
        String name = txtManagerName.getText();

        if(username.isEmpty() || name.isEmpty() || password.isEmpty() ){
        
            JOptionPane.showMessageDialog(this, "All Fields are Mandatory");
            return;
        }
        boolean isValid ; 
        
        isValid = name.matches("^[a-zA-Z]+$");
        if(!isValid) {
            JOptionPane.showMessageDialog(null, "Name must contains only alphabets");
            txtManagerName.setText("");
            return;
        }
        if(distribution.getUserAccountDirectory().checkIfUsernameIsUnique(username) == false){
            JOptionPane.showMessageDialog(this, "User name taken, try another one");
            txtUsername.setText("");
            txtPassword.setText("");
            return;
        }
        
        isValid = username.matches("^[a-zA-Z0-9]+$");
        
        if(!isValid) {
            JOptionPane.showMessageDialog(null, "Username must be Alphanumeric");
            txtUsername.setText("");
            return;
        }
        
        isValid = password.matches("^[a-zA-Z0-9]+$$");
        
        if(!isValid) {
            JOptionPane.showMessageDialog(null, "Password must be Alphanumeric");
            txtPassword.setText("");
            return;
        }

        if(password.length()<6){
            JOptionPane.showMessageDialog(this, "Password too weak, choose a password with a minimum length of 6");
            txtPassword.setText("");
            return;
        }

        Employee employee = distribution.getEmployeeDirectory().createEmployee(name);
        UserAccount ua = distribution.getUserAccountDirectory().createUserAccount(username, password, employee, new ManagerRole());

        populateTable(distribution);
        txtUsername.setText("");
        txtPassword.setText("");
        txtManagerName.setText("");
        btnDelete.setEnabled(true);
        btnModify.setEnabled(true);
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DistributionEnterpriseAdminJPanel manetn = (DistributionEnterpriseAdminJPanel) component;
        //sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        //btnCreate.setEnabled(false);
        btnDelete.setEnabled(false);
        btnModify.setEnabled(false);
        btnSubmit.setEnabled(true);
        Distribution dist = (Distribution)distributionJComboBox.getSelectedItem();
        int selectedRowIndex = tblManager.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(null, "Please select a row to Modify", "Warning", JOptionPane.WARNING_MESSAGE);
            btnModify.setEnabled(true);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblManager.getModel();
        UserAccount us = (UserAccount) model.getValueAt(selectedRowIndex, 0);
        txtManagerName.setText(us.getEmployee().getName());
        txtPassword.setText(us.getPassword());
        txtUsername.setText(us.getUsername());
        dist.getUserAccountDirectory().removeUser(us);
        //this.enterprise.getDistributionDirectory().deleteDistributionUnit(dist);
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        Distribution dist = (Distribution)distributionJComboBox.getSelectedItem();
        int selectedRowIndex = tblManager.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(null, "Please select a row to Modify", "Warning", JOptionPane.WARNING_MESSAGE);
            btnModify.setEnabled(true);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblManager.getModel();
        UserAccount us = (UserAccount) model.getValueAt(selectedRowIndex, 0);

        dist.getEmployeeDirectory().deleteEmployee(us.getEmployee());
        dist.getUserAccountDirectory().removeUser(us);
        populateTable(dist);
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox distributionJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblManager;
    private javax.swing.JTextField txtManagerName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
