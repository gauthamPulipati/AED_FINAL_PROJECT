/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Laboratory;

import Business.Hospital.Hospital;
import Business.Products.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TestRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gauthamrajsimhapulipati
 */
public class LabAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabAdminJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private Hospital hospital;
    
    public LabAdminJPanel(JPanel userProcessContainer, UserAccount account, Hospital hospital) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.hospital = hospital;
        populateTable();
        populateJComboBox();
    }
    
    private void populateJComboBox(){
        technicianJComboBox.removeAllItems();
        
        String del = "Technician";
        
        for(UserAccount ua:hospital.getUserAccountDirectory().getUserAccountList()){
            if(ua.getRole().toString().equals(del)){
                technicianJComboBox.addItem(ua);
            }
        }
    }
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblTestRequest.getModel();
        model.setRowCount(0);
        
        ArrayList<WorkRequest> wr = hospital.getWorkQueue().getWorkRequestList2();
        for(int i=wr.size()-1; i>=0;i--){
            
            TestRequest lt = (TestRequest)wr.get(i);
            if(lt.getCustomer()==null){
                continue;
            }
            Product product = lt.getProduct();
                Object[] row = new Object[4];
                row[0] = lt;
                row[1] = product.getProductName();
                row[2] = lt.getCustomer().getEmployee().getName();
                row[3] = lt.getStatus();
                model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTestRequest = new javax.swing.JTable();
        btnExamine = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        technicianJComboBox = new javax.swing.JComboBox();

        tblTestRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Test Kit", "Customer Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTestRequest);

        btnExamine.setText("Examine");
        btnExamine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExamineActionPerformed(evt);
            }
        });

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Lab Technician : ");

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        jLabel2.setText("Test Sample :");

        technicianJComboBox.setBackground(new java.awt.Color(153, 191, 170));
        technicianJComboBox.setForeground(new java.awt.Color(92, 61, 70));
        technicianJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        technicianJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                technicianJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addComponent(technicianJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btnAssign)
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExamine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(btnReject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(25, 25, 25)
                        .addComponent(btnExamine)
                        .addGap(18, 18, 18)
                        .addComponent(btnReject))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnAssign)
                    .addComponent(technicianJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(102, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnExamineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExamineActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTestRequest.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to examine");
            return;
        }

        WorkRequest request = (WorkRequest) tblTestRequest.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Sample sent")){
            request.setStatus("Accepted");
        }
        else{
            JOptionPane.showMessageDialog(this, "Request has been previously accepted/ rejected");
        }
        populateTable();
    }//GEN-LAST:event_btnExamineActionPerformed

    private void technicianJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_technicianJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_technicianJComboBoxActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTestRequest.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to reject sample");
            return;
        }

        WorkRequest request = (WorkRequest) tblTestRequest.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Sent")){
            request.setStatus("Rejected");
        }
        else{
            JOptionPane.showMessageDialog(this, "Request has been previously accepted/ rejected");
        }
        populateTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTestRequest.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        TestRequest request = (TestRequest) tblTestRequest.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Accepted")){
            
            UserAccount ua1 = (UserAccount)technicianJComboBox.getSelectedItem();
            request.setReceiver(ua1);
            request.setStatus("Sent for testing");
            populateTable();
        }
        else{
            if(request.getStatus().equals("Sent")){
                JOptionPane.showMessageDialog(this, "Please accept this request to assign");
            }
            else{
                JOptionPane.showMessageDialog(this, "Request has been previously assigned/ rejected");
            }
        }
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnExamine;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTestRequest;
    private javax.swing.JComboBox technicianJComboBox;
    // End of variables declaration//GEN-END:variables
}
