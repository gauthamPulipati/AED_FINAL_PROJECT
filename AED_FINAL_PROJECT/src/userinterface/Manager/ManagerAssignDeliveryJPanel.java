/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Manager;

import Business.Distribution.Distribution;
import Business.Enterprise.Enterprise;
import Business.Order.Order;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CustomerOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gauthamrajsimhapulipati
 */
public class ManagerAssignDeliveryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagerAssignDeliveryJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount useraccount;
    private ArrayList<Enterprise> warehouseEnterprises;
    private Distribution distribution;
    
    public ManagerAssignDeliveryJPanel(JPanel userProcessContainer, UserAccount useraccount, ArrayList<Enterprise> warehouseEnterprises, Distribution distribution) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.useraccount = useraccount;
        this.warehouseEnterprises = warehouseEnterprises;
        this.distribution = distribution;
        
        populateTable();
        populateJComboBox();
    }
    
    private void populateJComboBox(){
        homeDeliveryManJComboBox.removeAllItems();
        
        String del = "Home Delivery Man";
        
        for(UserAccount ua:distribution.getUserAccountDirectory().getUserAccountList()){
            if(ua.getRole().toString().equals(del)){
                homeDeliveryManJComboBox.addItem(ua);
            }
        }
    }
    
    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblOrder.getModel();
        model.setRowCount(0);
        
        ArrayList<WorkRequest> wr = distribution.getWorkQueue().getWorkRequestList();
        
        for(int i=wr.size()-1; i>=0;i--){
            
            CustomerOrderWorkRequest lt = (CustomerOrderWorkRequest)wr.get(i);
            Order order = lt.getOrder();
                Object[] row = new Object[5];
                row[0] = lt;
                row[1] = order.getId();
                row[2] = order.getQuantity();
                row[3] = order.getPrice();
                row[4] = lt.getStatus();
                model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        homeDeliveryManJComboBox = new javax.swing.JComboBox();
        AssignShipping = new javax.swing.JButton();

        jLabel2.setText("Select Home Delivery Man:");

        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Order ID", "Quantity", "Price", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder);

        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        homeDeliveryManJComboBox.setBackground(new java.awt.Color(153, 191, 170));
        homeDeliveryManJComboBox.setForeground(new java.awt.Color(92, 61, 70));
        homeDeliveryManJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        homeDeliveryManJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeDeliveryManJComboBoxActionPerformed(evt);
            }
        });

        AssignShipping.setText("Assign Delivery Man");
        AssignShipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignShippingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAccept, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnReject, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(homeDeliveryManJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AssignShipping, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAccept)
                        .addGap(18, 18, 18)
                        .addComponent(btnReject)
                        .addGap(55, 55, 55)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeDeliveryManJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(AssignShipping)
                .addContainerGap(193, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to accept");
            return;
        }

        WorkRequest request = (WorkRequest) tblOrder.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Customer order placed")){
            request.setStatus("Customer Order Accepted");
        }
        else{
            JOptionPane.showMessageDialog(this, "Request has been previously accepted/ rejected");
        }
        populateTable();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to reject the order");
            return;
        }

        WorkRequest request = (WorkRequest) tblOrder.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Sent")){
            request.setStatus("Rejected");
        }
        else{
            JOptionPane.showMessageDialog(this, "Request has been previously accepted/ rejected");
        }
        populateTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void homeDeliveryManJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeDeliveryManJComboBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_homeDeliveryManJComboBoxActionPerformed

    private void AssignShippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignShippingActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }

        CustomerOrderWorkRequest request = (CustomerOrderWorkRequest) tblOrder.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Customer Order Accepted")){
            
            UserAccount ua1 = (UserAccount)homeDeliveryManJComboBox.getSelectedItem();
            request.setReceiver(ua1);
            request.setStatus("On the way");
            populateTable();
        }
        else{
            if(request.getStatus().equals("Sent")){
                JOptionPane.showMessageDialog(this, "Please accept this request to assign");
            }
            else{
                JOptionPane.showMessageDialog(this, "Request has been previously assigned/ rejected");
            }
        }
    }//GEN-LAST:event_AssignShippingActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignShipping;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox homeDeliveryManJComboBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrder;
    // End of variables declaration//GEN-END:variables
}
